How did viewing a diff between two versions of a file help you see the 
bug that was introduced?

The diff functionality allows users to focus only on the lines of code
that have been edited.  This is much more efficient than skimming through
the entire source code.



How could having easy access to the entire history of a file make you a 
more efficient programmer in the long term?

Version control allows you to save your program in the case of an 
emergency, or refer to an older working version.  In short, this makes
patches and updates easy to perform.  It also allows you to better
collaborate with partners since the authors and time of edit can be seen.



What do you think are the pros and cons of manually choosing when to 
create a commit, like you do in Git, vs having versions automatically 
saved, like Google Docs does?

 The advantage of choosing when to create a commit is the ability to make
 each commit logical.  That is, each commit has a purpose that can be
 easily seen.  Autosaved commits, on the other hand, have no value.  
 There is no distinction between a commit that fixes a big, and a commit 
 that exists simply because of a set time interval.



Why do you think some version control systems, like Git, allow saving 
multiple files in one commit, while others, like Google Docs, treat 
each file separately?

 Git allows users to save multiple files in one commit because the file
 changes can often be related to the same logial commit.  For example, 
 if I created a new Button on an Android app, this would likely result 
 in a change in the strings.xml and activity_main files.  Including both 
 edits in the same commit makes sense, because the changes to both files
 refers to the same logical change, ie adding the button.



How can you use the commands git log and git diff to view the history 
of files?

 git log is used to find the most recent commits and displays the 
 message and its ID.  The git diff command is then used to compare two
 commits, using a -- to indicate code that was removed from the latest
 version and ++ to indicate code that was added.



How might using version control make you more confident to make changes
that could break something?

 Version control makes it easier to go to earlier versions of code before
 a bug surfaces.  It's basically a tether that keeps you from falling.



 Now that you have your workspace set up, what do you want to try using 
 Git for?

  Working on revisoins of Android Apps.




